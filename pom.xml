<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.5.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.weixiaoyi</groupId>
    <artifactId>com-weixiaoyi-docker</artifactId>
    <version>0.0.1</version>
    <name>com-weixiaoyi-docker</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.13</version>
                <configuration>
                    <!-- 私有仓库配置，需要settings.xml文件配合serverId对应的服务地址 -->
                    <serverId>my-docker-registry</serverId>
                    <registryUrl>https://registry.cn-beijing.aliyuncs.com/v2/</registryUrl>
                    <!-- build 时强制覆盖 tag，配合 imageTags 使用 默认：false -->
                    <forceTags>false</forceTags>
                    <!-- install阶段也上传，否则只有deploy阶段上传 -->
                    <pushImage>true</pushImage>
                    <dockerHost>http://39.106.221.56:2375</dockerHost>
                    <dockerDirectory>${project.basedir}</dockerDirectory>
                    <!-- push 镜像失败，重试次数 默认：5 -->
                    <retryPushCount>3</retryPushCount>
                    <!-- 指定 –rm=true 即 build 完成后删除中间容器 默认：false -->
                    <rm>false</rm>
                    <imageName>
                        registry.cn-beijing.aliyuncs.com/persion_two/xiaoyi-docker:${project.version}
                    </imageName>
                    <!--<newName>registry.cn-beijing.aliyuncs.com/persion_two/xiaoyi-docker:latest</newName>-->
                    <imageTags>
                        <!--docker的tag为项目版本号、latest-->
                        <imageTag>${project.version}</imageTag>
                    </imageTags>
                    <resources>
                        <rescource><!-- 将打包文件放入dockerDirectory指定的位置 -->
                            <!--<targetPath>/</targetPath>-->
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </rescource>
                    </resources>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
